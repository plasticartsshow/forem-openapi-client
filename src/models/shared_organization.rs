/*
 * Forem API V1
 *
 * Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SharedOrganization : The organization the resource belongs to



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SharedOrganization {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    #[serde(rename = "slug", skip_serializing_if = "Option::is_none")]
    pub slug: Option<String>,
    /// Profile image (640x640)
    #[serde(rename = "profile_image", skip_serializing_if = "Option::is_none")]
    pub profile_image: Option<String>,
    /// Profile image (90x90)
    #[serde(rename = "profile_image_90", skip_serializing_if = "Option::is_none")]
    pub profile_image_90: Option<String>,
}

impl SharedOrganization {
    /// The organization the resource belongs to
    pub fn new() -> SharedOrganization {
        SharedOrganization {
            name: None,
            username: None,
            slug: None,
            profile_image: None,
            profile_image_90: None,
        }
    }
}


